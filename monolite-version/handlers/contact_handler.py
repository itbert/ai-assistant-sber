# handlers/contact_handler.py

from telebot import TeleBot
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton

def register_contact_handlers(bot: TeleBot):
    @bot.message_handler(func=lambda message: message.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏")
    def handle_contact(message: Message):
        try:
            back_to_menu = ReplyKeyboardMarkup(resize_keyboard=True)
            btn = KeyboardButton("‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
            back_to_menu.add(btn)

            bot.send_message(
                message.chat.id,
                "üì¨ –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:\n\n"
                "üìß Email: example@example.com\n"
                "üì± Telegram: @developer_username",
                reply_markup=back_to_menu
            )
        except Exception as e:
            from logging import getLogger
            logger = getLogger(__name__)
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: {e}")

    @bot.message_handler(func=lambda message: message.text == "‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
    def handle_back_to_menu(message: Message):
        try:
            from handlers.start_handler import start
            start(message)
        except Exception as e:
            from logging import getLogger
            logger = getLogger(__name__)
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é: {e}")